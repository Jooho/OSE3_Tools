[OSE3_INSTALL:children]
masters
nodes
etcd
lb
infra

[OSE3_INSTALL:vars]
ansible_ssh_user=root

# Check if it is possible to reach to internet. If it is not, internal repository using apache will be installed by default but you can overwrite it with 'internal_repo_install'.
internet_connected=false  

# This variable allow you to overwrite hosts file forcely. Once hosts file is updated, it never try to update the file even though you execute this script again by default. 
overwrite_hosts_file=true

##will be deleted
# If internet_connected is false, you need archieved openshift-ansible because it is not possible to clone the github.
openshift_ansible_path=/home/jooho

# This DNS server using bind will be installed and the wildcard card entry configuration will be applied.
dns_install=true
dns_wildcard_domain="cloudapps.example.com"
dns_routers_ip=%NODE1_PUBLIC_IP%
dns_host_ip="%INFRA_PUBLIC_IP%"
#external_dns_ip="10.64.255.25"

##will be deleted
# This proxy server using haproxy play an role in vip for multiple routers  (To-Do : image) In production, it would be changed L4 machine.
proxy_install=false
proxy_vip="192.168.259.201"    
proxy_host_ip="192.168.259.200" #default:infra

# This internal_repository using apache is useful if the site is not available to use internet. If 'internet_connected' set false, internal repository will be installed by default.
internal_repo_install=true
internal_repo_host_ip="%INFRA_PUBLIC_IP%"
internal_repo_host_name="internal-repo.example.com"
internal_repo_iso_src_path=/root/ose
#internal_repo_iso_dest_path=/root/iso
internal_repo_rhel_iso_long="%RHEL_ISO_FILE%"
#internal_repo_rhel_iso_long="rhel-server-7.1-x86_64-151125.iso"
internal_repo_rhel_iso_short="rhel71"
internal_repo_ose_iso_long="%OSE_ISO_FILE%"
#internal_repo_ose_iso_long="ose-3.1-x86_64-151125.iso"
internal_repo_ose_iso_short="ose31"
internal_repo_apache_repo_path="/var/www/html/repo"

# This NFS/iscsi server is for testing PV and docker-registory-storage hence I strongly disagee that you use it in Production. Only use it for Test environment.
nfs_iscsi_install=false
nfs_iscsi_host_ip="%INFRA_PUBLIC_IP%"     #default:infra

# Docker setup 
#         docker_storage_block_dev_name - docker use loop back device but it does not recommend in production so this value will allow docker use block device.
#                                         Note) It needs you to attach block device to each node before executing this script.
#         docker_options - This is for docker option in /etc/sysconfig/docker file
docker_setup=true
docker_storage_block_dev_name="vda"
docker_options="--insecure-registry 172.30.0.0/16"

# If you would like to register your server to system, you should provide Red Hat id/password.
#      Condition(this must be set) -> internet_connected=true, internal_repo_install=false
subscription_register=false
subscription_register_name=test
subscription_register_password=test
subscription_register_pool_id=8a85f9813cf493fe013d028b6cf75b5a

# If you use this script for testing environment, please set this true. Then you can set more infra environment using ansible.
# This varible will effect -> network
development=true

## will be deleted
openshift_ansible_tar=false

deployment_type=openshift-enterprise

# Uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/htpasswd'}]


# If you choose master HA architecture using packmaker, you should provide master configuration.
# master cluster ha variables using pacemaker or RHEL HA
#openshift_master_cluster_password=openshift_cluster
#openshift_master_cluster_vip=192.168.133.25
#openshift_master_cluster_public_vip=192.168.133.25
#openshift_master_cluster_hostname=openshift-ansible.test.example.com
#openshift_master_cluster_public_hostname=openshift-ansible.test.example.com


# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=lb.example.com
openshift_master_cluster_public_hostname=lb.example.com

# override the default controller lease ttl
#osm_controller_lease_ttl=30

# Host group for master
# ansible_ssh_host : this is for initial connection of ansible playbook. ex) RHEV gives floating ip to VM automatically, it is the only ip that ansible can connect to execute playbook
# public_network_ip : if you want to fix public ip which can be reached from outside, you set this value. Then, it will change network script.
# mgmt_network_ip : if you want to fix mgmt ip for communication among systems(masters/nodes/etcds) , you set this value. Then, it will change network script.
#                   However, I don't recommand that you change mgmt ip because it is same as ansible_ssh_host, which means that it can be disconnected.
# is_node: master can be node as well so please set it to true in that case.
# openshift_hostname : for deployer pods to deploy other pods. These (containers) will contact the master via its name (openshift_hostname) - and this will _not_ be in their /etc/hosts file
# openshift_public_hostname : oc login or browserâ€™s URL (normally, it is same as openshift_hostname)
# openshift_ip : internal ip (it is normally same as openshift_public_ip)
# openshift_public_ip : external ip
#
[masters]
master1.example.com ansible_ssh_host=%MASTER1_PRIVATE_IP% mgmt_network_ip=%MASTER1_PRIVATE_IP% public_network_ip=%MASTER1_PUBLIC_IP% public_network_gw=%MASTER1_PUBLIC_GW_IP%  is_node=false openshift_public_hostname=master1.example.com openshift_hostname=master1.example.com openshift_ip=%MASTER1_PUBLIC_IP% openshift_public_ip=%MASTER1_PUBLIC_IP%
master2.example.com ansible_ssh_host=%MASTER2_PRIVATE_IP% mgmt_network_ip=%MASTER2_PRIVATE_IP% public_network_ip=%MASTER2_PUBLIC_IP% public_network_gw=%MASTER2_PUBLIC_GW_IP%  is_node=false openshift_public_hostname=master2.example.com openshift_hostname=master2.example.com openshift_ip=%MASTER2_PUBLIC_IP% openshift_public_ip=%MASTER2_PUBLIC_IP%
master3.example.com ansible_ssh_host=%MASTER3_PRIVATE_IP% mgmt_network_ip=%MASTER3_PRIVATE_IP% public_network_ip=%MASTER3_PUBLIC_IP% public_network_gw=%MASTER3_PUBLIC_GW_IP%  is_node=false openshift_public_hostname=master3.example.com openshift_hostname=master3.example.com openshift_ip=%MASTER3_PUBLIC_IP% openshift_public_ip=%MASTER3_PUBLIC_IP%

[masters:vars]
# It will help change hostname of each master system.
set_hostname=true

# It will help set up network configuration of each master system.
set_network=true
# Note!! It is important variable. If you misconfigure it, the master systems' network could be broken. Hence, please double-check the device is for master_mgmt_network
mgmt_network_dev_name=ens3
# Note!! It is important variable. If you misconfigure it, the master systems' network could be broken. Hence, please double-check the device is for master_public_network
public_network_dev_name=ens8


[nodes]
node1.example.com ansible_ssh_host=%NODE1_PRIVATE_IP% mgmt_network_ip=%NODE1_PRIVATE_IP% public_network_ip=%NODE1_PUBLIC_IP% public_network_gw=%NODE1_PUBLIC_GW_IP% openshift_node_labels="{'region': 'primary', 'zone': 'infra'}" openshift_public_hostname=node1.example.com openshift_hostname=node1.example.com openshift_ip=%NODE1_PUBLIC_IP% openshift_public_ip=%NODE1_PUBLIC_IP%
node2.example.com ansible_ssh_host=%NODE2_PRIVATE_IP% mgmt_network_ip=%NODE2_PRIVATE_IP% public_network_ip=%NODE2_PUBLIC_IP% public_network_gw=%NODE2_PUBLIC_GW_IP% openshift_node_labels="{'region': 'primary', 'zone': 'east'}" openshift_public_hostname=node2.example.com openshift_hostname=node2.example.com openshift_ip=%NODE2_PUBLIC_IP% openshift_public_ip=%NODE2_PUBLIC_IP%
node3.example.com ansible_ssh_host=%NODE3_PRIVATE_IP% mgmt_network_ip=%NODE3_PRIVATE_IP% public_network_ip=%NODE3_PUBLIC_IP% public_network_gw=%NODE3_PUBLIC_GW_IP% openshift_node_labels="{'region': 'primary', 'zone': 'west'}" openshift_public_hostname=node3.example.com openshift_hostname=node3.example.com openshift_ip=%NODE3_PUBLIC_IP% openshift_public_ip=%NODE3_PUBLIC_IP%


[nodes:vars]
# It will help change hostname of each node system.
set_hostname=true

# It will help set up network configuration of each node system.
set_network=true
# Note!! It is important variable. If you misconfigure it, the node systems' network could be broken. Hence, please double-check the device is for node_mgmt_network
mgmt_network_dev_name=ens3
# Note!! It is important variable. If you misconfigure it, the node systems' network could be broken. Hence, please double-check the device is for node_public_network
public_network_dev_name=ens8



[etcd]
etcd1.example.com ansible_ssh_host=%ETCD1_PRIVATE_IP%  mgmt_network_ip=%ETCD1_PRIVATE_IP% public_network_ip=%ETCD1_PUBLIC_IP%  public_network_gw=%ETCD1_PUBLIC_GW_IP% openshift_public_hostname=etcd1.example.com openshift_hostname=etcd1.example.com openshift_ip=%ETCD1_PUBLIC_IP% openshift_public_ip=%ETCD1_PUBLIC_IP%
etcd2.example.com ansible_ssh_host=%ETCD2_PRIVATE_IP%  mgmt_network_ip=%ETCD2_PRIVATE_IP% public_network_ip=%ETCD2_PUBLIC_IP%  public_network_gw=%ETCD2_PUBLIC_GW_IP% openshift_public_hostname=etcd2.example.com openshift_hostname=etcd2.example.com openshift_ip=%ETCD2_PUBLIC_IP% openshift_public_ip=%ETCD2_PUBLIC_IP%
etcd3.example.com ansible_ssh_host=%ETCD3_PRIVATE_IP%  mgmt_network_ip=%ETCD3_PRIVATE_IP% public_network_ip=%ETCD3_PUBLIC_IP%  public_network_gw=%ETCD3_PUBLIC_GW_IP% openshift_public_hostname=etcd3.example.com openshift_hostname=etcd3.example.com openshift_ip=%ETCD3_PUBLIC_IP% openshift_public_ip=%ETCD3_PUBLIC_IP%


[etcd:vars]
# It will help change hostname of each etcd system.
set_hostname=true

# It will help set up network configuration of each etcd system.
set_network=true
# Note!! It is important variable. If you misconfigure it, the etcd systems' network could be broken. Hence, please double-check the device is for etcd_mgmt_network
mgmt_network_dev_name=ens3
# Note!! It is important variable. If you misconfigure it, the node systems' network could be broken. Hence, please double-check the device is for etcd_public_network
public_network_dev_name=ens8

# Specify load balancer host
[lb]
lb.example.com ansible_ssh_host=%LB_PRIVATE_IP%  mgmt_network_ip=%LB_PRIVATE_IP% public_network_ip=%LB_PUBLIC_IP% public_network_gw=%LB_PUBLIC_GW_IP% openshift_public_hostname=lb.example.com openshift_hostname=lb.example.com openshift_ip=%LB_PUBLIC_IP% openshift_public_ip=%LB_PUBLIC_IP%

[lb:vars]
# It will help change hostname of each etcd system.
set_hostname=true

# It will help set up network configuration of each etcd system.
set_network=true
# Note!! It is important variable. If you misconfigure it, the etcd systems' network could be broken. Hence, please double-check the device is for etcd_mgmt_network
mgmt_network_dev_name=ens3
# Note!! It is important variable. If you misconfigure it, the node systems' network could be broken. Hence, please double-check the device is for node_public_network
public_network_dev_name=ens8

[infra]
infra.example.com ansible_ssh_host=%INFRA_PRIVATE_IP%  mgmt_network_ip=%INFRA_PRIVATE_IP% public_network_ip=%INFRA_PUBLIC_IP% public_network_gw=%INFRA_PUBLIC_GW_IP%

[infra:vars]
# It will help change hostname of each infra system.
set_hostname=true

# It will help set up network configuration of each infra system.
set_network=true
# Note!! It is important variable. If you misconfigure it, the infra systems' network could be broken. Hence, please double-check the device is for infra_mgmt_network
mgmt_network_dev_name=ens3
# Note!! It is important variable. If you misconfigure it, the infra systems' network could be broken. Hence, please double-check the device is for infra_public_network
public_network_dev_name=ens8
